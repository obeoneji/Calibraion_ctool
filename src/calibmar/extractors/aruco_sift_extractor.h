#pragma once

#include "calibmar/core/calibration_targets.h"
#include "extractor.h"
#include "sift_extractor.h"

namespace calibmar {
  class ArucoSiftFeatureExtractor : public FeatureExtractor {
   public:
    struct Options {
      // Aruco marker type to detect
      ArucoMarkerTypes aruco_type = ArucoMarkerTypes::DICT_4X4_50;
      // A masking rectangle is generated by scaling the aruco bounds around its center with this factor
      double masking_scale_factor = 3;
      // this is mainly needed for livestream calibration, during which the full detection is too slow initially
      bool only_extract_aruco = false;
    };
    ArucoSiftFeatureExtractor(const Options& options);

    Status Extract(Image& image, const Pixmap& pixmap) override;

    Status ExtractFull(Image& image, const Pixmap& pixmap);

   private:
    SiftFeatureExtractor sift_extractor_;
    Options options_;
  };
}