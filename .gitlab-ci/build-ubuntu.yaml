
check-formatting: # check clang-format on the *.cpp and *.h files in src/ and tests/ modified in the latest commit.
  tags:
    - ubuntu
  stage: pre-build
  script:
    - 'git diff-tree --no-commit-id --name-only HEAD -r --diff-filter=d ''src/**/*.cpp'' ''src/**/*.h'' ''tests/**/*.cpp'' ''tests/**/*.h''  | xargs clang-format --style=file:.clang-format --dry-run --Werror -i'

ubuntu:build:
  tags:
    - ubuntu
  stage: build
  script:
    - mkdir build
    - cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCUDA_ENABLED=OFF
    - ninja
  artifacts:
    paths:
      - "build/"

ubuntu:build-CUDA:
  tags:
    - ubuntu
  stage: build
  script:
    - mkdir build_CUDA
    - cd build_CUDA
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCUDA_ENABLED=ON -DCMAKE_CUDA_ARCHITECTURES=all-major
    - ninja
  artifacts:
    paths:
      - "build_CUDA/"

ubuntu:test:
  tags:
    - ubuntu
  stage: test
  dependencies:
    - ubuntu:build
  script:
    - cd build
    - ctest -j 8

ubuntu:deploy:
  tags:
    - ubuntu
  stage: deploy
  dependencies: [ubuntu:build, ubuntu:build-CUDA]
  rules:
  - if: $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /\A(\.?[\w\+-]+\.?)+\z/ # Run this job when a git tag is created and the tag conforms to the generic package version regex
  script:
    - cd build
    - cpack . -G DEB -P calibmar-no-cuda
    - cd ../build_CUDA
    - cpack . -G DEB -P calibmar-cuda
    - cd ..
    - PACKAGE_NAME=$(find ./build -maxdepth 1 -name *.deb -printf %f)
    - PACKAGE_NAME_CUDA=$(find ./build_CUDA -maxdepth 1 -name *.deb -printf %f)
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./build/$PACKAGE_NAME "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/calibmar-ubuntu/$CI_COMMIT_TAG/$PACKAGE_NAME"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./build_CUDA/$PACKAGE_NAME_CUDA "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/calibmar-ubuntu/$CI_COMMIT_TAG/$PACKAGE_NAME_CUDA"'
