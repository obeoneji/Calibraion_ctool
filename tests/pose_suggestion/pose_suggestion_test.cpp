
#include "calibmar/calibrators/opencv_calibration.h"
#include "calibmar/core/camera_models.h"
#include "calibmar/extractors/chessboard_extractor.h"
#include "calibmar/pose_suggestion/pose_suggestion.h"
#include "opencv2/core/utils/logger.hpp"
#include <Eigen/SparseCore>
#include <boost/test/unit_test.hpp>
#include <calibmar/calibrators/calibrator.h>
#include <calibmar/readers/filesystem_reader.h>
#include <colmap/geometry/pose.h>
#include <colmap/scene/projection.h>
#include <filesystem>
#include <fstream>
#include <iostream>
#include <opencv2/calib3d.hpp>
#include <opencv2/core/eigen.hpp>
#include <sstream>
#include <string>

using namespace calibmar;

namespace {
  extern std::vector<Eigen::Vector3d> points3D;
  extern std::vector<std::vector<Eigen::Vector2d>> point2DSets;
  extern std::vector<double> ac_data;
  extern std::vector<double> jacobian_data;

  void PrepareCalibration(calibmar::Calibration& calibration);
}

BOOST_AUTO_TEST_CASE(CornerUncertaintyAutoCorrelationMat_Reference) {
  std::vector<Eigen::Vector2d> points2D = point2DSets[0];
  points2D.insert(std::end(points2D), std::begin(point2DSets[1]), std::end(point2DSets[1]));

  Eigen::SparseMatrix<double> mat(360, 360);
  pose_suggestion::ComputeCornerUncertaintyAutoCorrMat(points2D, 2, {10, 9}, mat);

  // This test data was generated from the matlab reference implementation of the Peng/Sturm Calibration Wizard paper.
  Eigen::SparseMatrix<double> AC_mat(360, 360);
  for (size_t i = 0; i < ac_data.size(); i += 4) {
    size_t j = i / 2;
    AC_mat.insert(j, j) = ac_data[i];
    AC_mat.insert(j, j + 1) = ac_data[i + 1];
    AC_mat.insert(j + 1, j) = ac_data[i + 2];
    AC_mat.insert(j + 1, j + 1) = ac_data[i + 3];
  }

  BOOST_TEST(AC_mat.isApprox(mat, 0.001));
}

BOOST_AUTO_TEST_CASE(Jacobian_Reference) {
  Calibration calibration;
  PrepareCalibration(calibration);

  Eigen::MatrixXd jac_intrinsics;
  Eigen::MatrixXd jac_extrinsics;
  Eigen::Matrix3d rot;
  rot << 0.6182, -0.7512, 0.2313, 0.4550, 0.5820, 0.6740, -0.6410, -0.3114, 0.7016;
  Eigen::Vector3d trans(0.0042559, -0.091696, 0.53233);
  pose_suggestion::ComputeJacobian(rot, trans, points3D, calibration.Camera(), jac_intrinsics, jac_extrinsics);
  Eigen::MatrixXd jacobian_actual(jac_intrinsics.rows(), jac_intrinsics.cols() + jac_extrinsics.cols());
  jacobian_actual << jac_intrinsics, jac_extrinsics;

  // this is data generated from the "Jean-Yves Bouguet. Camera calibration tool box for matlab". Since the underlying opencv
  // code is based on this toolbox, it is not too suprising that the results match. Better test data could not be acquired
  // quickly. Peng/Sturm Calibration Wizard jacobian calculation returns different values for the rotational derivates, that has
  // not been investigated further.
  Eigen::Map<Eigen::Matrix<double, -1, -1, Eigen::RowMajor>> jacobian_expected(jacobian_data.data(), 180, 11);

  BOOST_TEST(jacobian_actual.isApprox(jacobian_expected, 0.0001));
}

BOOST_AUTO_TEST_CASE(Jacobian_Fisheye) {
  colmap::Camera camera;
  camera.model_id = colmap::CameraModelNameToId("OPENCV_FISHEYE");
  camera.params = {443.253, 441.794, 658.905, 447.884, -0.0134935, -0.0164344, -0.00698698, 0.0062684};
  camera.width = 1280;
  camera.height = 800;

  Eigen::MatrixXd jac_intrinsics;
  Eigen::MatrixXd jac_extrinsics;
  Eigen::Matrix3d rot;
  rot << 0.6182, -0.7512, 0.2313, 0.4550, 0.5820, 0.6740, -0.6410, -0.3114, 0.7016;
  Eigen::Vector3d trans(0.0042559, -0.091696, 0.53233);
  pose_suggestion::ComputeJacobian(rot, trans, points3D, camera, jac_intrinsics, jac_extrinsics);
  Eigen::MatrixXd jacobian_actual(jac_intrinsics.rows(), jac_intrinsics.cols() + jac_extrinsics.cols());
  jacobian_actual << jac_intrinsics, jac_extrinsics;

  std::cout << jacobian_actual;

  // only roughly checks the shape for correctness
  // the underlying opencv fisheye module forms the jacobian differently than the calib3d module
  BOOST_TEST(jacobian_actual.cols() == camera.params.size() + 6);
  BOOST_TEST(jacobian_actual.rows() == points3D.size() * 2);
  BOOST_TEST(jacobian_actual(0, 1) == 0);
  BOOST_TEST(jacobian_actual(1, 0) == 0);
  Eigen::Matrix<double, 2, 3> first_rot_dev(jacobian_actual.block<2, 3>(0, 8));
  BOOST_TEST(first_rot_dev.isApprox(Eigen::Matrix<double, 2, 3>::Zero()));
}

BOOST_AUTO_TEST_CASE(CostFunction_Reference) {
  Calibration calibration;
  PrepareCalibration(calibration);

  Eigen::MatrixXd A, B;
  pose_suggestion::ComputeJacobian(calibration.Images(), points3D, calibration.Camera(), A, B);
  Eigen::MatrixXd jacobian(360, 17);
  jacobian << A, B;
  jacobian.conservativeResize(jacobian.rows() + calibration.Points3D().size() * 2, jacobian.cols() + 6);
  jacobian.rightCols(6).setZero();
  jacobian.bottomRows(calibration.Points3D().size() * 2).setZero();

  std::vector<Eigen::Vector2d> points2D = point2DSets[0];
  points2D.insert(std::end(points2D), std::begin(point2DSets[1]), std::end(point2DSets[1]));

  Eigen::SparseMatrix<double> ac_mat(540, 540);
  pose_suggestion::ComputeCornerUncertaintyAutoCorrMat(points2D, 2, {10, 9}, ac_mat);

  std::pair<int, int> size = std::make_pair(10, 9);

  pose_suggestion::CostFunctionData data{
      calibration,
      jacobian,
      ac_mat,
      size,
  };

  double trace = pose_suggestion::CostFunction({0, 0, 0, -0.042591, -0.082253, 0.40899}, &data);

  // This trace value for this data point of the cost function was extracted from the Calibration Wizard matlab reference source.
  // The matlab reference code had to be adapted to generate jacoby matrices that match opencv rotations.
  // BOOST_TEST(std::abs(trace - 53.854) < 0.005);
  BOOST_TEST(
      std::abs(trace - 53.854) <
      0.1);  // Seems to potentially deviate quite strongly depending on machine and lib versions? Currently not investigated.
}

BOOST_AUTO_TEST_CASE(SuggestPose_DoesNotCrash) {
  Calibration calibration;
  PrepareCalibration(calibration);

  Eigen::Vector3d trans;
  Eigen::Vector4d rot;
  pose_suggestion::EstimateNextBestPose(calibration, 9, 10, 0.02, rot, trans);
}

namespace {

  void PrepareCalibration(calibmar::Calibration& calibration) {
    Image image1;
    image1.SetPose(colmap::Rigid3d(Eigen::Quaterniond(0.8517305, -0.2892326, 0.2560357, 0.3540414),
                                   Eigen::Vector3d(0.0042559, -0.091696, 0.53233)));
    image1.SetPoints2D(point2DSets[0]);
    for (size_t i = 0; i < points3D.size(); i++) {
      image1.SetPoint3DforPoint2D(i, i);
    }

    Image image2;
    image2.SetPose(colmap::Rigid3d(Eigen::Quaterniond(0.9980833, -0.0085063, 0.0612573, 0.002201),
                                   Eigen::Vector3d(-0.089439, -0.072811, 0.28565)));
    image2.SetPoints2D(point2DSets[0]);
    for (size_t i = 0; i < points3D.size(); i++) {
      image2.SetPoint3DforPoint2D(i, i);
    }

    calibration.AddImage(image1);
    calibration.AddImage(image2);
    for (size_t i = 0; i < points3D.size(); i++) {
      calibration.AddPoint3D(points3D[i]);
    }

    colmap::Camera camera;
    camera.model_id = colmap::CameraModelNameToId(CameraModel::CameraModels().at(CameraModelType::RadialCameraModel).model_name);
    camera.params = {699.55, 313.98, 216.62, 0.071229, -0.4345};
    camera.width = 640;
    camera.height = 480;

    calibration.SetCamera(camera);
  }

  std::vector<Eigen::Vector3d> points3D = {
      {0, 0, 0},       {0.02, 0, 0},    {0.04, 0, 0},    {0.06, 0, 0},    {0.08, 0, 0},    {0.10, 0, 0},    {0.12, 0, 0},
      {0.14, 0, 0},    {0.16, 0, 0},    {0.18, 0, 0},    {0, 0.02, 0},    {0.02, 0.02, 0}, {0.04, 0.02, 0}, {0.06, 0.02, 0},
      {0.08, 0.02, 0}, {0.10, 0.02, 0}, {0.12, 0.02, 0}, {0.14, 0.02, 0}, {0.16, 0.02, 0}, {0.18, 0.02, 0}, {0, 0.04, 0},
      {0.02, 0.04, 0}, {0.04, 0.04, 0}, {0.06, 0.04, 0}, {0.08, 0.04, 0}, {0.10, 0.04, 0}, {0.12, 0.04, 0}, {0.14, 0.04, 0},
      {0.16, 0.04, 0}, {0.18, 0.04, 0}, {0, 0.06, 0},    {0.02, 0.06, 0}, {0.04, 0.06, 0}, {0.06, 0.06, 0}, {0.08, 0.06, 0},
      {0.10, 0.06, 0}, {0.12, 0.06, 0}, {0.14, 0.06, 0}, {0.16, 0.06, 0}, {0.18, 0.06, 0}, {0, 0.08, 0},    {0.02, 0.08, 0},
      {0.04, 0.08, 0}, {0.06, 0.08, 0}, {0.08, 0.08, 0}, {0.10, 0.08, 0}, {0.12, 0.08, 0}, {0.14, 0.08, 0}, {0.16, 0.08, 0},
      {0.18, 0.08, 0}, {0, 0.10, 0},    {0.02, 0.10, 0}, {0.04, 0.10, 0}, {0.06, 0.10, 0}, {0.08, 0.10, 0}, {0.10, 0.10, 0},
      {0.12, 0.10, 0}, {0.14, 0.10, 0}, {0.16, 0.10, 0}, {0.18, 0.10, 0}, {0, 0.12, 0},    {0.02, 0.12, 0}, {0.04, 0.12, 0},
      {0.06, 0.12, 0}, {0.08, 0.12, 0}, {0.10, 0.12, 0}, {0.12, 0.12, 0}, {0.14, 0.12, 0}, {0.16, 0.12, 0}, {0.18, 0.12, 0},
      {0, 0.14, 0},    {0.02, 0.14, 0}, {0.04, 0.14, 0}, {0.06, 0.14, 0}, {0.08, 0.14, 0}, {0.10, 0.14, 0}, {0.12, 0.14, 0},
      {0.14, 0.14, 0}, {0.16, 0.14, 0}, {0.18, 0.14, 0}, {0, 0.16, 0},    {0.02, 0.16, 0}, {0.04, 0.16, 0}, {0.06, 0.16, 0},
      {0.08, 0.16, 0}, {0.10, 0.16, 0}, {0.12, 0.16, 0}, {0.14, 0.16, 0}, {0.16, 0.16, 0}, {0.18, 0.16, 0}};

  std::vector<std::vector<Eigen::Vector2d>> point2DSets = {
      {
          {319.579, 95.912},  {336.391, 105.225}, {354.051, 115.000}, {372.629, 125.272}, {392.204, 136.083}, {412.864, 147.481},
          {434.706, 159.521}, {457.834, 172.263}, {482.354, 185.776}, {508.371, 200.132}, {299.637, 110.018}, {316.153, 119.798},
          {333.509, 130.067}, {351.774, 140.866}, {371.028, 152.238}, {391.362, 164.235}, {412.876, 176.916}, {435.678, 190.347},
          {459.887, 204.603}, {485.620, 219.763}, {279.226, 124.444}, {295.432, 134.708}, {312.468, 145.492}, {330.403, 156.840},
          {349.318, 168.798}, {369.304, 181.423}, {390.462, 194.778}, {412.906, 208.935}, {436.761, 223.976}, {462.156, 239.987},
          {258.321, 139.203}, {274.201, 149.970}, {290.901, 161.292}, {308.490, 173.212}, {327.047, 185.783}, {346.664, 199.065},
          {367.443, 213.128}, {389.500, 228.049}, {412.964, 243.917}, {437.975, 260.828}, {236.894, 154.313}, {252.430, 165.605},
          {268.776, 177.485}, {286.001, 190.004}, {304.182, 203.217}, {323.409, 217.189}, {343.785, 231.995}, {365.428, 247.720},
          {388.470, 264.460}, {413.056, 282.322}, {214.916, 169.794}, {230.086, 181.633}, {246.058, 194.099}, {262.897, 207.244},
          {280.680, 221.130}, {299.496, 235.827}, {319.446, 251.415}, {340.649, 267.988}, {363.237, 285.649}, {387.360, 304.514},
          {192.361, 185.669}, {207.139, 198.080}, {222.711, 211.159}, {239.139, 224.963}, {256.499, 239.556}, {274.878, 255.017},
          {294.376, 271.430}, {315.110, 288.898}, {337.214, 307.531}, {360.837, 327.455}, {169.205, 201.959}, {183.561, 214.971},
          {198.701, 228.694}, {214.688, 243.190}, {231.594, 258.530}, {249.506, 274.796}, {268.521, 292.082}, {288.755, 310.494},
          {310.340, 330.155}, {333.427, 351.196}, {145.436, 218.684}, {159.333, 232.326}, {174.004, 246.727}, {189.513, 261.954},
          {205.929, 278.081}, {223.336, 295.198}, {241.831, 313.405}, {261.528, 332.817}, {282.556, 353.560}, {305.065, 375.776},
      },
      {
          {94.925, 38.294},   {141.724, 36.560},  {189.693, 35.025},  {238.626, 33.577},  {288.443, 32.134},  {339.147, 30.653},
          {390.771, 29.139},  {443.300, 27.656},  {496.581, 26.340},  {550.197, 25.418},  {94.021, 86.894},   {141.118, 85.802},
          {189.271, 84.831},  {238.300, 83.896},  {288.156, 82.933},  {338.879, 81.905},  {390.549, 80.810},  {443.205, 79.690},
          {496.758, 78.636},  {550.867, 77.808},  {93.337, 135.860},  {140.634, 135.296}, {188.910, 134.799}, {238.000, 134.314},
          {287.875, 133.798}, {338.604, 133.227}, {390.294, 132.597}, {443.024, 131.933}, {496.749, 131.288}, {551.177, 130.757},
          {92.758, 185.027},  {140.180, 184.919}, {188.540, 184.837}, {237.682, 184.758}, {287.587, 184.666}, {338.336, 184.552},
          {390.056, 184.413}, {442.845, 184.259}, {496.681, 184.110}, {551.298, 184.001}, {92.227, 234.328},  {139.706, 234.649},
          {188.124, 234.959}, {237.321, 235.271}, {287.280, 235.595}, {338.084, 235.938}, {389.861, 236.301}, {442.714, 236.679},
          {496.621, 237.060}, {551.318, 237.421}, {91.737, 283.735},  {139.208, 284.504}, {187.655, 285.223}, {236.913, 285.939},
          {286.953, 286.688}, {337.848, 287.491}, {389.714, 288.353}, {442.636, 289.254}, {496.576, 290.149}, {551.248, 290.953},
          {91.343, 333.189},  {138.726, 334.477}, {187.166, 335.663}, {236.478, 336.824}, {286.614, 338.021}, {337.622, 339.290},
          {389.592, 340.633}, {442.575, 342.016}, {496.493, 343.352}, {551.010, 344.494}, {91.154, 382.546},  {138.351, 384.469},
          {186.722, 386.212}, {236.056, 387.885}, {286.276, 389.568}, {337.392, 391.304}, {389.450, 393.093}, {442.451, 394.876},
          {496.251, 396.520}, {550.442, 397.807}, {91.345, 431.501},  {138.221, 434.214}, {186.426, 436.639}, {235.714, 438.908},
          {285.964, 441.116}, {337.138, 443.312}, {389.219, 445.480}, {442.138, 447.531}, {495.667, 449.277}, {549.295, 450.418},
      }};

  std::vector<double> ac_data = {
      2.7664, 0.14828,    0.14828,    5.4577, 2.7956, 0.15749,     0.15749,     5.4403, 2.8262, 0.16675,    0.16675,    5.4221,
      2.8583, 0.17598,    0.17598,    5.4029, 2.8924, 0.18506,     0.18506,     5.3824, 2.9289, 0.19388,    0.19388,    5.3603,
      2.9686, 0.20227,    0.20227,    5.3362, 3.0127, 0.21,        0.21,        5.3092, 3.0627, 0.2168,     0.2168,     5.2784,
      3.1167, 0.22422,    0.22422,    5.2448, 2.8618, 0.10272,     0.10272,     5.4042, 2.8914, 0.11185,    0.11185,    5.3865,
      2.9224, 0.12105,    0.12105,    5.368,  2.955,  0.13023,     0.13023,     5.3484, 2.9892, 0.13932,    0.13932,    5.3275,
      3.0258, 0.1482,     0.1482,     5.3052, 3.0651, 0.15674,     0.15674,     5.281,  3.1081, 0.16479,    0.16479,    5.2542,
      3.156,  0.17211,    0.17211,    5.2242, 3.2084, 0.17935,     0.17935,     5.1909, 2.9635, 0.059788,   0.059788,   5.3456,
      2.9936, 0.068823,   0.068823,   5.3275, 3.0252, 0.077925,    0.077925,    5.3083, 3.0583, 0.08702,    0.08702,    5.2881,
      3.0932, 0.096029,   0.096029,   5.2666, 3.1302, 0.10486,     0.10486,     5.2435, 3.1698, 0.11341,    0.11341,    5.2187,
      3.2125, 0.12156,    0.12156,    5.1916, 3.2594, 0.12912,     0.12912,     5.1615, 3.3106, 0.13624,    0.13624,    5.1281,
      3.0717, 0.020266,   0.020266,   5.2812, 3.1022, 0.029214,    0.029214,    5.2626, 3.1344, 0.038226,   0.038226,   5.2427,
      3.1683, 0.047228,   0.047228,   5.2216, 3.2041, 0.056144,    0.056144,    5.199,  3.242,  0.06489,    0.06489,    5.1749,
      3.2822, 0.073376,   0.073376,   5.149,  3.3252, 0.081497,    0.081497,    5.1209, 3.3718, 0.089119,   0.089119,   5.0901,
      3.4224, 0.096153,   0.096153,   5.056,  3.1868, -0.015004,   -0.015004,   5.2104, 3.2175, -0.0061197, -0.0061197, 5.1912,
      3.2502, 0.0028308,  0.0028308,  5.1705, 3.2849, 0.011771,    0.011771,    5.1483, 3.3216, 0.020621,   0.020621,   5.1245,
      3.3604, 0.029297,   0.029297,   5.0989, 3.4016, 0.037713,    0.037713,    5.0715, 3.4454, 0.045773,   0.045773,   5.0419,
      3.4921, 0.053366,   0.053366,   5.0098, 3.5423, 0.060354,    0.060354,    4.9746, 3.309,  -0.045076,  -0.045076,  5.1323,
      3.3397, -0.036234,  -0.036234,  5.1124, 3.3727, -0.02731,    -0.02731,    5.0909, 3.4079, -0.018386,  -0.018386,  5.0675,
      3.4454, -0.009547,  -0.009547,  5.0423, 3.4852, -0.00088349, -0.00088349, 5.0151, 3.5274, 0.0075115,  0.0075115,  4.9858,
      3.572,  0.01554,    0.01554,    4.9544, 3.6192, 0.023095,    0.023095,    4.9205, 3.6689, 0.030059,   0.030059,   4.884,
      3.4388, -0.068842,  -0.068842,  5.0458, 3.4691, -0.060043,   -0.060043,   5.0254, 3.5019, -0.051123,  -0.051123,  5.003,
      3.5373, -0.042171,  -0.042171,  4.9785, 3.5753, -0.033283,   -0.033283,   4.9518, 3.6158, -0.02456,   -0.02456,   4.9229,
      3.6587, -0.01611,   -0.01611,   4.8917, 3.7039, -0.0080441,  -0.0080441,  4.8582, 3.7512, -0.0004818, -0.0004818, 4.8224,
      3.8003, 0.0064629,  0.0064629,  4.7845, 3.5764, -0.084971,   -0.084971,   4.9498, 3.6057, -0.076256,  -0.076256,  4.9291,
      3.6379, -0.067355,  -0.067355,  4.906,  3.6729, -0.058364,   -0.058364,   4.8805, 3.7108, -0.04939,   -0.04939,   4.8525,
      3.7513, -0.040552,  -0.040552,  4.822,  3.7943, -0.031978,   -0.031978,   4.789,  3.8395, -0.023807,  -0.023807,  4.7536,
      3.8864, -0.016187,  -0.016187,  4.716,  3.9344, -0.0092762,  -0.0092762,  4.6768, 3.7199, -0.092445,  -0.092445,  4.8443,
      3.7483, -0.083695,  -0.083695,  4.8231, 3.7796, -0.074726,   -0.074726,   4.7994, 3.8139, -0.065639,  -0.065639,  4.7729,
      3.851,  -0.056545,  -0.056545,  4.7438, 3.8908, -0.04757,    -0.04757,    4.712,  3.9331, -0.038857,  -0.038857,  4.6775,
      3.9772, -0.030561,  -0.030561,  4.6407, 4.0228, -0.022856,   -0.022856,   4.602,  4.0695, -0.015939,  -0.015939,  4.5613,
      4.3224, 0.17604,    0.17604,    4.316,  4.3234, 0.14032,     0.14032,     4.3179, 4.3239, 0.12054,    0.12054,    4.3188,
      4.3241, 0.1122,     0.1122,     4.319,  4.3242, 0.11035,     0.11035,     4.319,  4.3243, 0.1094,     0.1094,     4.319,
      4.3243, 0.10302,    0.10302,    4.3193, 4.3242, 0.083964,    0.083964,    4.3204, 4.3238, 0.043683,   0.043683,   4.322,
      4.3236, 0.013934,   0.013934,   4.3227, 4.3225, 0.11768,     0.11768,     4.3203, 4.323,  0.094834,   0.094834,   4.321,
      4.3233, 0.083307,   0.083307,   4.3213, 4.3234, 0.080052,    0.080052,    4.3213, 4.3235, 0.081635,   0.081635,   4.3211,
      4.3236, 0.08411,    0.08411,    4.3209, 4.3237, 0.082996,    0.082996,    4.3209, 4.3237, 0.073251,   0.073251,   4.3213,
      4.3236, 0.049066,   0.049066,   4.3221, 4.3237, 0.029954,    0.029954,    4.3224, 4.3225, 0.07498,    0.07498,    4.3224,
      4.3228, 0.061596,   0.061596,   4.3226, 4.3229, 0.054761,    0.054761,    4.3227, 4.323,  0.052772,   0.052772,   4.3226,
      4.3231, 0.053656,   0.053656,   4.3225, 4.3232, 0.055105,    0.055105,    4.3224, 4.3232, 0.054495,   0.054495,   4.3224,
      4.3233, 0.048897,   0.048897,   4.3225, 4.3233, 0.035015,    0.035015,    4.3227, 4.3234, 0.023735,   0.023735,   4.3228,
      4.3226, 0.041362,   0.041362,   4.3233, 4.3227, 0.035565,    0.035565,    4.3233, 4.3228, 0.031408,   0.031408,   4.3233,
      4.3229, 0.028472,   0.028472,   4.3232, 4.323,  0.026227,    0.026227,    4.3232, 4.3231, 0.024026,   0.024026,   4.3232,
      4.3231, 0.021126,   0.021126,   4.3231, 4.3231, 0.016714,    0.016714,    4.3231, 4.3232, 0.009908,   0.009908,   4.3232,
      4.3232, 0.0050834,  0.0050834,  4.3232, 4.323,  0.010021,    0.010021,    4.3233, 4.323,  0.011383,   0.011383,   4.3233,
      4.323,  0.0093982,  0.0093982,  4.3233, 4.3231, 0.0049202,   0.0049202,   4.3232, 4.3232, -0.0011301, -0.0011301, 4.3232,
      4.3233, -0.0077216, -0.0077216, 4.3231, 4.3233, -0.013691,   -0.013691,   4.323,  4.3233, -0.017722,  -0.017722,  4.323,
      4.3233, -0.018288,  -0.018288,  4.323,  4.3233, -0.016748,   -0.016748,   4.323,  4.3237, -0.026044,  -0.026044,  4.3225,
      4.3235, -0.016501,  -0.016501,  4.3227, 4.3235, -0.015302,   -0.015302,   4.3228, 4.3236, -0.020274,  -0.020274,  4.3226,
      4.3237, -0.029019,  -0.029019,  4.3224, 4.3238, -0.038816,   -0.038816,   4.3222, 4.3238, -0.046584,  -0.046584,  4.322,
      4.3237, -0.048856,  -0.048856,  4.322,  4.3236, -0.041641,   -0.041641,   4.3223, 4.3237, -0.032536,  -0.032536,  4.3224,
      4.3248, -0.073981,  -0.073981,  4.3202, 4.3245, -0.053688,   -0.053688,   4.3211, 4.3244, -0.046713,  -0.046713,  4.3214,
      4.3245, -0.049454,  -0.049454,  4.3213, 4.3246, -0.057983,   -0.057983,   4.3209, 4.3246, -0.067866,  -0.067866,  4.3205,
      4.3246, -0.074093,  -0.074093,  4.3203, 4.3245, -0.070992,   -0.070992,   4.3206, 4.3242, -0.051948,  -0.051948,  4.3215,
      4.3241, -0.032634,  -0.032634,  4.322,  4.3258, -0.1412,     -0.1412,     4.3154, 4.3258, -0.10582,   -0.10582,   4.3176,
      4.3257, -0.088745,  -0.088745,  4.3186, 4.3257, -0.084777,   -0.084777,   4.3188, 4.3257, -0.088341,  -0.088341,  4.3186,
      4.3257, -0.093234,  -0.093234,  4.3184, 4.3256, -0.09245,    -0.09245,    4.3186, 4.3252, -0.077964,  -0.077964,  4.3196,
      4.3244, -0.040173,  -0.040173,  4.3216, 4.3235, -0.0061629,  -0.0061629,  4.3229, 4.3288, -0.19507,   -0.19507,   4.3078,
      4.3282, -0.1507,    -0.1507,    4.3123, 4.3277, -0.12697,    -0.12697,    4.3145, 4.3274, -0.11772,   -0.11772,   4.3154,
      4.3271, -0.1165,    -0.1165,    4.3157, 4.3268, -0.11614,    -0.11614,    4.316,  4.3263, -0.1086,    -0.1086,    4.317,
      4.3255, -0.084493,  -0.084493,  4.319,  4.3241, -0.032332,   -0.032332,   4.322,  4.3231, 0.0016791,  0.0016791,  4.3233};

  std::vector<double> jacobian_data = {
      0.0080086,  1, 0, 0.1663,     0.0049449,   0,        0,       0,       1316.4,    -0.16428,  -10.553,
      -0.17255,   0, 1, -3.583,     -0.10654,    0,        0,       0,       -0.16428,  1319.9,    227.36,
      0.032042,   1, 0, 0.58859,    0.01548,     -1.2608,  -11.565, -16.737, 1348.8,    -0.66261,  -43.255,
      -0.15924,   0, 1, -2.9251,    -0.076931,   10.716,   -13.286, 17.412,  -0.66261,  1352,      214.96,
      0.057286,   1, 0, 0.97284,    0.023651,    -2.8978,  -22.726, -34.156, 1383.1,    -1.1479,   -79.282,
      -0.14526,   0, 1, -2.4669,    -0.059974,   21.797,   -26.681, 35.802,  -1.1479,   1385.6,    201.04,
      0.083843,   1, 0, 1.4062,     0.033765,    -4.9633,  -33.384, -52.303, 1419.5,    -1.5575,   -119.05,
      -0.13058,   0, 1, -2.1901,    -0.052586,   33.259,   -40.155, 55.251,  -1.5575,   1420.9,    185.41,
      0.11183,    1, 0, 2.0058,     0.051508,    -7.5166,  -43.421, -71.225, 1458.2,    -1.8258,   -163.02,
      -0.11513,   0, 1, -2.065,     -0.053027,   45.12,    -53.674, 75.851,  -1.8258,   1458.3,    167.83,
      0.14136,    1, 0, 2.9268,     0.086772,    -10.626,  -52.693, -90.964, 1499.3,    -1.8914,   -211.76,
      -0.098832,  0, 1, -2.0462,    -0.060666,   57.399,   -67.198, 97.707,  -1.8914,   1497.9,    148.05,
      0.17258,    1, 0, 4.3738,     0.15877,     -14.368,  -61.02,  -111.55, 1542.8,    -1.7104,   -265.86,
      -0.081621,  0, 1, -2.0685,    -0.07509,    70.117,   -80.674, 120.94,  -1.7104,   1540,      125.74,
      0.20564,    1, 0, 6.6151,     0.3049,      -18.832,  -68.168, -133,    1588.4,    -1.2789,   -325.96,
      -0.063406,  0, 1, -2.0396,    -0.094011,   83.292,   -94.033, 145.68,  -1.2789,   1584.7,    100.5,
      0.2407,     1, 0, 10.001,     0.59562,     -24.119,  -73.836, -155.26, 1635.7,    -0.66916,  -392.68,
      -0.044089,  0, 1, -1.8319,    -0.1091,     96.938,   -107.17, 172.07,  -0.66916,  1632.2,    71.929,
      0.27789,    1, 0, 14.988,     1.159,       -30.34,   -77.632, -178.25, 1683.6,    -0.088114, -466.51,
      -0.023567,  0, 1, -1.2711,    -0.098288,   111.06,   -119.96, 200.31,  -0.088114, 1682.6,    39.563,
      -0.020497,  1, 0, -0.33753,   -0.0079569,  2.9077,   -3.5782, -16.506, 1331.6,    0.42029,   27.32,
      -0.15239,   0, 1, -2.5094,    -0.059155,   16.435,   2.7135,  -15.111, 0.42029,   1334.7,    203.11,
      0.0031128,  1, 0, 0.041584,   0.00079506,  1.4124,   -16.196, -34.164, 1364.5,    -0.063981, -4.2512,
      -0.13841,   0, 1, -1.849,     -0.035351,   27.276,   -10.42,  2.0679,  -0.063981, 1367.4,    189.02,
      0.027922,   1, 0, 0.31327,    0.0050293,   -0.4931,  -28.487, -52.569, 1399.4,    -0.55204,  -39.101,
      -0.12372,   0, 1, -1.3881,    -0.022285,   38.469,   -23.634, 20.221,  -0.55204,  1401.7,    173.26,
      0.054032,   1, 0, 0.55202,    0.0080694,   -2.866,   -40.358, -71.781, 1436.4,    -0.98062,  -77.644,
      -0.10829,   0, 1, -1.1063,    -0.016172,   50.028,   -36.894, 39.429,  -0.98062,  1437.9,    155.61,
      0.081557,   1, 0, 0.8602,     0.012982,    -5.7719,  -51.701, -91.861, 1475.8,    -1.2828,   -120.37,
      -0.092032,  0, 1, -0.97068,   -0.014649,   61.971,   -50.163, 59.788,  -1.2828,   1476.2,    135.82,
      0.11062,    1, 0, 1.3763,     0.024505,    -9.2866,  -62.387, -112.87, 1517.9,    -1.3955,   -167.83,
      -0.074882,  0, 1, -0.93162,   -0.016587,   74.316,   -63.396, 81.402,  -1.3955,   1516.8,    113.61,
      0.14138,    1, 0, 2.2856,     0.052896,    -13.499,  -72.247, -134.86, 1562.7,    -1.2739,   -220.7,
      -0.056754,  0, 1, -0.91753,   -0.021234,   87.082,   -76.535, 104.4,   -1.2739,   1560.1,    88.594,
      0.17397,    1, 0, 3.8343,     0.12102,     -18.512,  -81.067, -157.87, 1610.2,    -0.91418,  -279.67,
      -0.037553,  0, 1, -0.82765,   -0.026123,   100.28,   -89.503, 128.91,  -0.91418,  1606.2,    60.368,
      0.20858,    1, 0, 6.3475,     0.27676,     -24.448,  -88.561, -181.91, 1660.2,    -0.39271,  -345.49,
      -0.017174,  0, 1, -0.52265,   -0.022789,   113.93,   -102.19, 155.11,  -0.39271,  1655.4,    28.448,
      0.24537,    1, 0, 10.254,     0.61419,     -31.449,  -94.348, -206.93, 1711.7,    0.071684,  -418.86,
      0.0044968,  0, 1, 0.18792,    0.011256,    128.02,   -114.45, 183.19,  0.071684,  1707.8,    -7.6764,
      -0.049674,  1, 0, -0.68649,   -0.013579,   7.0268,   -6.5864, -32.865, 1347.6,    0.94953,   66.984,
      -0.13176,   0, 1, -1.821,     -0.036018,   32.447,   5.0236,  -30.968, 0.94953,   1349.8,    177.68,
      -0.026507,  1, 0, -0.26651,   -0.003834,   5.3422,   -20.274, -51.454, 1381,      0.50201,   36.632,
      -0.11709,   0, 1, -1.1772,    -0.016936,   43.373,   -7.9709, -14.058, 0.50201,   1383.1,    161.81,
      -0.0021548, 1, 0, -0.015557,  -0.00016067, 3.2158,   -33.712, -70.857, 1416.4,    0.038555,  3.0538,
      -0.10167,   0, 1, -0.73407,   -0.0075813,  54.633,   -21.018, 3.8202,  0.038555,  1418.2,    144.09,
      0.023484,   1, 0, 0.12882,    0.0010106,   0.58627,  -46.815, -91.142, 1454,      -0.37525,  -34.159,
      -0.085452,  0, 1, -0.46872,   -0.0036773,  66.241,   -34.079, 22.748,  -0.37525,  1455.2,    124.3,
      0.050524,   1, 0, 0.255,      0.0018407,   -2.6171,  -59.486, -112.38, 1494.1,    -0.66915,  -75.495,
      -0.068358,  0, 1, -0.34501,   -0.0024904,  78.213,   -47.113, 42.818,  -0.66915,  1494.5,    102.14,
      0.079093,   1, 0, 0.48531,    0.0042593,   -6.4772,  -71.608, -134.66, 1537,      -0.77597,  -121.53,
      -0.05031,   0, 1, -0.3087,    -0.0027093,  90.565,   -60.068, 64.139,  -0.77597,  1536.2,    77.304,
      0.10934,    1, 0, 0.98643,    0.012732,    -11.092,  -83.029, -158.05, 1582.8,    -0.64592,  -172.94,
      -0.031219,  0, 1, -0.28166,   -0.0036355,  103.31,   -72.882, 86.837,  -0.64592,  1580.8,    49.379,
      0.14142,    1, 0, 1.9831,     0.039802,    -16.58,   -93.554, -182.61, 1631.8,    -0.27101,  -230.49,
      -0.010981,  0, 1, -0.15398,   -0.0030905,  116.46,   -85.47,  111.06,  -0.27101,  1628.4,    17.897,
      0.17552,    1, 0, 3.7762,     0.11634,     -23.082,  -102.92, -208.41, 1683.8,    0.27421,   -295.03,
      0.010519,   0, 1, 0.22632,    0.0069726,   130.02,   -97.715, 136.97,  0.27421,   1679.3,    -17.682,
      0.21183,    1, 0, 6.7665,     0.30971,     -30.768,  -110.76, -235.43, 1738.3,    0.76628,   -367.38,
      0.033408,   0, 1, 1.0672,     0.048845,    143.98,   -109.45, 164.78,  0.76628,   1733.6,    -57.941,
      -0.079556,  1, 0, -1.0302,    -0.019092,   12.44,    -8.9841, -49.061, 1364.5,    1.3188,    108.57,
      -0.11066,   0, 1, -1.433,     -0.026557,   47.996,   6.902,   -47.611, 1.3188,    1365.4,    151.02,
      -0.056856,  1, 0, -0.4884,    -0.0060021,  10.616,   -23.758, -68.598, 1398.5,    0.91476,   79.534,
      -0.095271,  0, 1, -0.81838,   -0.010057,   58.965,   -5.9687, -31.004, 0.91476,   1399.4,    133.27,
      -0.032984,  1, 0, -0.16917,   -0.0012409,  8.3201,   -38.362, -89.015, 1434.4,    0.48454,   47.326,
      -0.079088,  0, 1, -0.40563,   -0.0029755,  70.247,   -18.865, -13.438, 0.48454,   1435.3,    113.48,
      -0.0078396, 1, 0, -0.021433,  -8.3788e-05, 5.4887,   -52.719, -110.39, 1472.6,    0.097094,  11.547,
      -0.062048,  0, 1, -0.16964,   -0.00066315, 81.855,   -31.745, 5.1672,  0.097094,  1473.3,    91.391,
      0.018689,   1, 0, 0.029951,   6.8628e-05,  2.0464,   -66.741, -132.8,  1513.3,    -0.17252,  -28.284,
      -0.044077,  0, 1, -0.07064,   -0.00016186, 93.8,     -44.56,  24.905,  -0.17252,  1513.6,    66.708,
      0.04673,    1, 0, 0.091911,   0.00025847,  -2.0957,  -80.321, -156.35, 1556.9,    -0.25089,  -72.745,
      -0.02509,   0, 1, -0.049348,  -0.00013877, 106.1,    -57.256, 45.884,  -0.25089,  1556.5,    39.057,
      0.076433,   1, 0, 0.31332,    0.0018368,   -7.0439,  -93.328, -181.14, 1603.7,    -0.0807,   -122.52,
      -0.0049875, 0, 1, -0.020445,  -0.00011985, 118.75,   -69.762, 68.228,  -0.0807,   1602.4,    7.9949,
      0.10796,    1, 0, 0.8984,     0.010695,    -12.928,  -105.59, -207.26, 1653.8,    0.35399,   -178.42,
      0.016343,   0, 1, 0.13599,    0.0016189,   131.77,   -81.986, 92.087,  0.35399,   1651.6,    -27.008,
      0.14151,    1, 0, 2.1245,     0.045655,    -19.907,  -116.86, -234.8,  1707.5,    0.98512,   -241.34,
      0.039026,   0, 1, 0.58591,    0.012591,    145.15,   -93.798, 117.64,  0.98512,   1704.2,    -66.559,
      0.17726,    1, 0, 4.3657,     0.154,       -28.177,  -126.81, -263.79, 1764.4,    1.5905,    -312.23,
      0.063201,   0, 1, 1.5566,     0.054909,    158.86,   -105.01, 145.09,  1.5905,    1760.5,    -111.32,
      -0.11019,   1, 0, -1.5414,    -0.030864,   19.236,   -10.726, -65.073, 1382.2,    1.4529,    152.23,
      -0.089063,  0, 1, -1.2459,    -0.024947,   63.042,   8.319,   -65.083, 1.4529,    1381.5,    123.05,
      -0.087977,  1, 0, -0.80155,   -0.010448,   17.328,   -26.603, -85.581, 1416.9,    1.0852,    124.63,
      -0.072921,  0, 1, -0.66438,   -0.0086603,  74.012,   -4.445,  -48.817, 1.0852,    1416.5,    103.3,
      -0.06461,   1, 0, -0.32961,   -0.0024049,  14.92,    -42.395, -107.03, 1453.5,    0.68035,   93.902,
      -0.055938,  0, 1, -0.28536,   -0.0020821,  85.27,    -17.209, -31.602, 0.68035,   1453.3,    81.298,
      -0.039987,  1, 0, -0.085155,  -0.00025928, 11.946,   -58.03,  -129.52, 1492.3,    0.31112,   59.673,
      -0.038042,  0, 1, -0.081014,  -0.00024667, 96.825,   -29.926, -13.36,  0.31112,   1492.3,    56.771,
      -0.013997,  1, 0, -0.00551,   -3.1008e-06, 8.3272,   -73.428, -153.13, 1533.7,    0.058167,  21.467,
      -0.019154,  0, 1, -0.0075404, -4.2434e-06, 108.69,   -42.543, 6.0013,  0.058167,  1533.8,    29.378,
      0.013488,   1, 0, 0.001723,   3.1462e-07,  3.9702,   -88.496, -177.98, 1578,      0.0024764, -21.285,
      0.00081856, 0, 1, 0.00010456, 1.9093e-08,  120.86,   -54.999, 26.588,  0.0024764, 1578,      -1.2917,
      0.042616,   1, 0, 0.068518,   0.0001575,   -1.2383,  -103.12, -204.18, 1625.6,    0.21072,   -69.271,
      0.021984,   0, 1, 0.035345,   8.1248e-05,  133.35,   -67.216, 48.525,  0.21072,   1625.3,    -35.734,
      0.073555,   1, 0, 0.37955,    0.002801,    -7.4378,  -117.14, -231.86, 1676.8,    0.70934,   -123.31,
      0.044463,   0, 1, 0.22943,    0.0016932,   146.16,   -79.093, 71.96,   0.70934,   1676.1,    -74.539,
      0.10649,    1, 0, 1.1897,     0.019018,    -14.803,  -130.34, -261.13, 1731.9,    1.4402,    -184.34,
      0.068394,   0, 1, 0.76405,    0.012214,    159.25,   -90.486, 97.072,  1.4402,    1730.5,    -118.39,
      0.14164,    1, 0, 2.8474,     0.081967,    -23.552,  -142.43, -292.09, 1790.6,    2.1867,    -253.4,
      0.093927,   0, 1, 1.8883,     0.054356,    172.59,   -101.19, 124.08,  2.1867,    1788.8,    -168.04,
      -0.1416,    1, 0, -2.4192,    -0.059168,   27.512,   -11.761, -80.867, 1400.6,    1.3183,    198.12,
      -0.066931,  0, 1, -1.1435,    -0.027967,   77.545,   9.2413,  -83.434, 1.3183,    1398.5,    93.649,
      -0.11992,   1, 0, -1.4115,    -0.023775,   25.582,   -28.759, -102.37, 1436.3,    0.97011,   172.09,
      -0.050008,  0, 1, -0.58862,   -0.0099148,  88.471,   -3.4347, -67.551, 0.97011,   1434.4,    71.768,
      -0.097084,  1, 0, -0.70899,   -0.0074066,  23.127,   -45.761, -124.89, 1473.8,    0.57059,   143,
      -0.032188,  0, 1, -0.23506,   -0.0024556,  99.654,   -16.087, -50.731, 0.57059,   1472.2,    47.41,
      -0.073012,  1, 0, -0.28112,   -0.0015478,  20.077,   -62.701, -148.52, 1513.4,    0.19635,   110.46,
      -0.013396,  0, 1, -0.05158,   -0.000284,   111.1,    -28.662, -32.897, 0.19635,   1512.4,    20.267,
      -0.047591,  1, 0, -0.076752,  -0.00017697, 16.351,   -79.507, -173.36, 1555.6,    -0.066094, 74.02,
      0.0064536,  0, 1, 0.010408,   2.3998e-05,  122.81,   -41.101, -13.959, -0.066094, 1555.1,    -10.037,
      -0.020694,  1, 0, -0.017113,  -2.0231e-05, 11.852,   -96.095, -199.53, 1600.7,    -0.12768,  33.124,
      0.027463,   0, 1, 0.02271,    2.6849e-05,  134.8,    -53.338, 6.186,   -0.12768,  1600.7,    -43.96,
      0.0078255,  1, 0, 0.013875,   3.5174e-05,  6.4607,   -112.36, -227.17, 1649.1,    0.088579,  -12.907,
      0.049746,   0, 1, 0.088204,   0.0002236,   147.04,   -65.286, 27.66,   0.088579,  1649.7,    -82.05,
      0.038135,   1, 0, 0.18241,    0.0012478,   0.030188, -128.18, -256.43, 1701.3,    0.6211,    -64.893,
      0.073437,   0, 1, 0.35127,    0.002403,    159.53,   -76.832, 50.609,  0.6211,    1702.2,    -124.97,
      0.070425,   1, 0, 0.72206,    0.010593,    -7.6267,  -143.35, -287.46, 1757.5,    1.4237,    -123.8,
      0.098684,   0, 1, 1.0118,     0.014843,    172.22,   -87.82,  75.21,   1.4237,    1758.5,    -173.47,
      0.10491,    1, 0, 1.957,      0.052269,    -16.749,  -157.61, -320.38, 1817.9,    2.2881,    -190.7,
      0.12565,    0, 1, 2.3439,     0.062604,    185.05,   -98.021, 101.68,  2.2881,    1818.8,    -228.41,
      -0.17384,   1, 0, -3.8918,    -0.12477,    37.368,   -12.03,  -96.391, 1419.6,    0.9393,    246.38,
      -0.044238,  0, 1, -0.99034,   -0.031751,   91.456,   9.631,   -102.72, 0.9393,    1416.2,    62.696,
      -0.15272,   1, 0, -2.5554,    -0.061213,   35.493,   -30.162, -118.92, 1456.4,    0.59021,   222.11,
      -0.026496,  0, 1, -0.44335,   -0.01062,    102.29,   -2.9783, -87.271, 0.59021,   1453.1,    38.536,
      -0.13046,   1, 0, -1.5537,    -0.026479,   33.067,   -48.398, -142.54, 1495,      0.17076,   194.82,
      -0.0077993, 0, 1, -0.092885,  -0.001583,   113.34,   -15.54,  -70.895, 0.17076,   1492.2,    11.648,
      -0.10697,   1, 0, -0.86499,   -0.010006,   30.02,    -66.673, -167.35, 1535.7,    -0.23897,  164.16,
      0.011933,   0, 1, 0.09649,    0.0011162,   124.62,   -27.996, -53.52,  -0.23897,  1533.6,    -18.312,
      -0.082156,  1, 0, -0.44901,   -0.0035099,  26.266,   -84.922, -193.46, 1578.9,    -0.54687,  129.66,
      0.032795,   0, 1, 0.17924,    0.0014011,   136.11,   -40.282, -35.06,  -0.54687,  1577.7,    -51.759,
      -0.055884,  1, 0, -0.23959,   -0.001469,   21.707,   -103.07, -221,    1624.9,    -0.65592,  90.804,
      0.054895,   0, 1, 0.23536,    0.001443,    147.82,   -52.321, -15.413, -0.65592,  1624.9,    -89.199,
      -0.028011,  1, 0, -0.1355,    -0.0009374,  16.22,    -121.03, -250.12, 1674.3,    -0.47861,  46.914,
      0.078359,   0, 1, 0.37905,    0.0026223,   159.72,   -64.019, 5.537,   -0.47861,  1675.5,    -131.24,
      0.0016288,  1, 0, 0.012142,   0.00012949,  9.6511,   -138.68, -281,    1727.5,    0.035953,  -2.8155,
      0.10333,    0, 1, 0.7703,     0.0082147,   171.78,   -75.251, 27.933,  0.035953,  1729.8,    -178.61,
      0.033226,   1, 0, 0.41684,    0.0074839,   1.8027,   -155.87, -313.81, 1784.9,    0.85449,   -59.35,
      0.12997,    0, 1, 1.6305,     0.029274,    183.93,   -85.843, 51.946,  0.85449,   1788.1,    -232.15,
      0.066996,   1, 0, 1.3798,     0.040694,    -7.5806,  -172.35, -348.72, 1846.8,    1.778,     -123.8,
      0.15845,    0, 1, 3.2633,     0.096241,    196.06,   -95.541, 77.79,   1.778,     1850.3,    -292.78,
      -0.20694,   1, 0, -6.221,     -0.26793,    48.912,   -11.465, -111.57, 1438.7,    0.41763,   297.07,
      -0.02095,   0, 1, -0.62979,   -0.027125,   104.72,   9.4439,  -123.02, 0.41763,   1434.6,    30.074,
      -0.18642,   1, 0, -4.5065,    -0.15603,    47.183,   -30.741, -135.16, 1476.9,    0.052781,  274.8,
      -0.00235,   0, 1, -0.056809,  -0.0019669,  115.4,    -3.1231, -108.05, 0.052781,  1472.8,    3.4641,
      -0.16478,   1, 0, -3.1488,    -0.086153,   44.88,    -50.229, -159.92, 1516.9,    -0.40658,  249.56,
      0.017267,   0, 1, 0.32996,    0.0090281,   126.26,   -15.621, -92.178, -0.40658,  1513.1,    -26.151,
      -0.14192,   1, 0, -2.1345,    -0.045953,   41.929,   -69.869, -185.94, 1558.9,    -0.87753,  220.99,
      0.03799,    0, 1, 0.57137,    0.012301,    137.29,   -27.984, -75.324, -0.87753,  1555.9,    -59.154,
      -0.11776,   1, 0, -1.4332,    -0.024964,   38.246,   -89.6,   -213.37, 1603.4,    -1.263,    188.67,
      0.059919,   0, 1, 0.72929,    0.012703,    148.49,   -40.141, -57.406, -1.263,    1601.5,    -96.004,
      -0.092151,  1, 0, -0.99039,   -0.015231,   33.727,   -109.36, -242.33, 1650.6,    -1.4583,   152.08,
      0.083171,   0, 1, 0.89388,    0.013747,    159.82,   -52.007, -38.327, -1.4583,   1650.3,    -137.26,
      -0.064969,  1, 0, -0.71859,   -0.011373,   28.246,   -129.06, -272.99, 1701.2,    -1.3658,   110.56,
      0.10788,    0, 1, 1.1932,     0.018885,    171.25,   -63.476, -17.973, -1.3658,   1702.7,    -183.59,
      -0.036044,  1, 0, -0.48512,   -0.0093446,  21.646,   -148.61, -305.54, 1755.6,    -0.922,    63.327,
      0.1342,     0, 1, 1.8062,     0.034792,    182.74,   -74.409, 3.7892,  -0.922,    1758.8,    -235.78,
      -0.0051883, 1, 0, -0.09526,   -0.0025042,  13.721,   -167.87, -340.18, 1814.3,    -0.14715,  9.4221,
      0.16231,    0, 1, 2.9801,     0.078339,    194.17,   -84.611, 27.126,  -0.14715,  1818.9,    -294.75,
      0.027814,   1, 0, 0.73067,    0.027495,    4.2017,   -186.62, -377.11, 1877.6,    0.76939,   -52.264,
      0.19238,    0, 1, 5.0539,     0.19018,     205.39,   -93.8,   52.243,  0.76939,   1882.8,    -361.5,
      -0.24092,   1, 0, -9.7058,    -0.56044,    62.244,   -9.9931, -126.32, 1457.2,    -0.043283, 350.14,
      0.002959,   0, 1, 0.11921,    0.0068834,   117.26,   8.6304,  -144.38, -0.043283, 1453.7,    -4.3004,
      -0.22105,   1, 0, -7.5785,    -0.37231,    60.774,   -30.411, -150.98, 1497.2,    -0.41999,  330.15,
      0.022461,   0, 1, 0.77002,    0.03783,     127.73,   -3.9238, -129.97, -0.41999,  1493.1,    -33.546,
      -0.20008,   1, 0, -5.8237,    -0.24285,    58.71,    -51.162, -176.9,  1538.8,    -0.91885,  307.25,
      0.043047,   0, 1, 1.253,      0.052248,    138.33,   -16.388, -114.68, -0.91885,  1534.8,    -66.104,
      -0.17791,   1, 0, -4.4356,    -0.1584,     55.976,   -72.191, -204.19, 1582.5,    -1.4546,   281.08,
      0.064813,   0, 1, 1.6159,     0.057705,    149.03,   -28.69,  -98.42,  -1.4546,   1579,      -102.4,
      -0.15444,   1, 0, -3.3927,    -0.10673,    52.484,   -93.441, -232.98, 1628.5,    -1.9255,   251.23,
      0.087868,   0, 1, 1.9302,     0.060724,    159.81,   -40.749, -81.124, -1.9255,   1626.2,    -142.93,
      -0.12956,   1, 0, -2.6514,    -0.077698,   48.129,   -114.85, -263.41, 1677.3,    -2.2195,   217.19,
      0.11234,    0, 1, 2.299,      0.06737,     170.64,   -52.47,  -62.698, -2.2195,   1676.7,    -188.32,
      -0.10312,   1, 0, -2.137,     -0.063416,   42.785,   -136.36, -295.66, 1729.4,    -2.2288,   178.33,
      0.13836,    0, 1, 2.8674,     0.08509,     181.47,   -63.734, -43.034, -2.2288,   1730.7,    -239.28,
      -0.074963,  1, 0, -1.7319,    -0.057305,   36.288,   -157.87, -329.94, 1785.2,    -1.877,    133.89,
      0.16611,    0, 1, 3.8377,     0.12698,     192.2,    -74.385, -22.006, -1.877,    1788.5,    -296.68,
      -0.044903,  1, 0, -1.259,     -0.050569,   28.427,   -179.26, -366.46, 1845.4,    -1.1707,   82.913,
      0.19576,    0, 1, 5.4888,     0.22047,     202.68,   -84.203, 0.54124, -1.1707,   1850.2,    -361.48,
      -0.012726,  1, 0, -0.45882,   -0.023706,   18.922,   -200.37, -405.45, 1910.2,    -0.28907,  24.315,
      0.22752,    0, 1, 8.2028,     0.42381,     212.71,   -92.873, 24.804,  -0.28907,  1915.4,    -434.7};
}
